// push constant 17 StackTest 8
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17 StackTest 9
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq StackTest 10
// sub StackTest 10
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
M=D
@SP
M=M+1

@SP
M=M-1
A=M
D=M
@IF_TRUE_0
D;JEQ
@IF_FALSE_0
0;JMP
(IF_TRUE_0)
  @SP
  A=M
  M=-1
  @EQ_0
  0;JMP
(IF_FALSE_0)
  @SP
  A=M
  M=0
  @EQ_0
  0;JMP
(EQ_0)
@SP
M=M+1
// push constant 17 StackTest 11
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 16 StackTest 12
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq StackTest 13
// sub StackTest 13
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
M=D
@SP
M=M+1

@SP
M=M-1
A=M
D=M
@IF_TRUE_1
D;JEQ
@IF_FALSE_1
0;JMP
(IF_TRUE_1)
  @SP
  A=M
  M=-1
  @EQ_1
  0;JMP
(IF_FALSE_1)
  @SP
  A=M
  M=0
  @EQ_1
  0;JMP
(EQ_1)
@SP
M=M+1
// push constant 16 StackTest 14
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17 StackTest 15
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq StackTest 16
// sub StackTest 16
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
M=D
@SP
M=M+1

@SP
M=M-1
A=M
D=M
@IF_TRUE_2
D;JEQ
@IF_FALSE_2
0;JMP
(IF_TRUE_2)
  @SP
  A=M
  M=-1
  @EQ_2
  0;JMP
(IF_FALSE_2)
  @SP
  A=M
  M=0
  @EQ_2
  0;JMP
(EQ_2)
@SP
M=M+1
// push constant 892 StackTest 17
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891 StackTest 18
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt StackTest 19
// sub StackTest 19
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
M=D
@SP
M=M+1

@SP
M=M-1
A=M
D=M
@IF_TRUE_3
D;JLT
@IF_FALSE_3
0;JMP
(IF_TRUE_3)
  @SP
  A=M
  M=-1
  @LT_3
  0;JMP
(IF_FALSE_3)
  @SP
  A=M
  M=0
  @LT_3
  0;JMP
(LT_3)
@SP
M=M+1
// push constant 891 StackTest 20
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 892 StackTest 21
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt StackTest 22
// sub StackTest 22
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
M=D
@SP
M=M+1

@SP
M=M-1
A=M
D=M
@IF_TRUE_4
D;JLT
@IF_FALSE_4
0;JMP
(IF_TRUE_4)
  @SP
  A=M
  M=-1
  @LT_4
  0;JMP
(IF_FALSE_4)
  @SP
  A=M
  M=0
  @LT_4
  0;JMP
(LT_4)
@SP
M=M+1
// push constant 891 StackTest 23
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891 StackTest 24
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt StackTest 25
// sub StackTest 25
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
M=D
@SP
M=M+1

@SP
M=M-1
A=M
D=M
@IF_TRUE_5
D;JLT
@IF_FALSE_5
0;JMP
(IF_TRUE_5)
  @SP
  A=M
  M=-1
  @LT_5
  0;JMP
(IF_FALSE_5)
  @SP
  A=M
  M=0
  @LT_5
  0;JMP
(LT_5)
@SP
M=M+1
// push constant 32767 StackTest 26
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766 StackTest 27
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt StackTest 28
// sub StackTest 28
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
M=D
@SP
M=M+1

@SP
M=M-1
A=M
D=M
@IF_TRUE_6
D;JGT
@IF_FALSE_6
0;JMP
(IF_TRUE_6)
  @SP
  A=M
  M=-1
  @GT_6
  0;JMP
(IF_FALSE_6)
  @SP
  A=M
  M=0
  @GT_6
  0;JMP
(GT_6)
@SP
M=M+1
// push constant 32766 StackTest 29
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767 StackTest 30
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt StackTest 31
// sub StackTest 31
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
M=D
@SP
M=M+1

@SP
M=M-1
A=M
D=M
@IF_TRUE_7
D;JGT
@IF_FALSE_7
0;JMP
(IF_TRUE_7)
  @SP
  A=M
  M=-1
  @GT_7
  0;JMP
(IF_FALSE_7)
  @SP
  A=M
  M=0
  @GT_7
  0;JMP
(GT_7)
@SP
M=M+1
// push constant 32766 StackTest 32
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766 StackTest 33
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt StackTest 34
// sub StackTest 34
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
M=D
@SP
M=M+1

@SP
M=M-1
A=M
D=M
@IF_TRUE_8
D;JGT
@IF_FALSE_8
0;JMP
(IF_TRUE_8)
  @SP
  A=M
  M=-1
  @GT_8
  0;JMP
(IF_FALSE_8)
  @SP
  A=M
  M=0
  @GT_8
  0;JMP
(GT_8)
@SP
M=M+1
// push constant 57 StackTest 35
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 31 StackTest 36
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 53 StackTest 37
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add StackTest 38
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D+M
M=D
@SP
M=M+1
// push constant 112 StackTest 39
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub StackTest 40
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
M=D
@SP
M=M+1
// neg StackTest 41
@SP
A=M-1
M=-M
// and StackTest 42
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D&M
M=D
@SP
M=M+1
// push constant 82 StackTest 43
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or StackTest 44
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=D|M
M=D
@SP
M=M+1
// not StackTest 45
@SP
A=M-1
M=!M
